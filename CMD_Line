typedef struct {
    int num_elements; 
    int num_threads; 
    unsigned int seed;
    int task;
    int print_results;
} CommandLineArgs;


int parse_arguments(int argc, char *argv[], CommandLineArgs *args) {
    if (argc != 6) {
        fprintf(stderr, "Usage: %s <num_elements> <num_threads> <seed> <task> <print_results>\n", argv[0]);
        return -1;
    }

    args->num_elements = atoi(argv[1]);
    if (args->num_elements <= 0) {
        fprintf(stderr, "Error: Number of elements must be positive\n");
        return -1;
    }

    args->num_threads = atoi(argv[2]);
    if (args->num_threads <= 0) {
        fprintf(stderr, "Error: Number of threads must be positive\n");
        return -1;
    }

    args->seed = (unsigned int)atoi(argv[3]);

    args->task = atoi(argv[4]);
    if (args->task != 1 && args->task != 2) {
        fprintf(stderr, "Error: Task must be 1 (max) or 2 (sum)\n");
        return -1;
    }

    if (strcmp(argv[5], "Y") == 0) {
        args->print_results = 1;
    } else if (strcmp(argv[5], "N") == 0) {
        args->print_results = 0;
    } else {
        fprintf(stderr, "Error: Print results must be Y or N\n");
        return -1;
    }

    return 0;
}
